<div data-section-id="{{ section.id }}" data-section-type="page-collection">

  {% assign productTextStyle = settings.product_text_style %}
  {% assign productImageFlip = settings.product_image_flip %}
  {% assign collectionImage = section.settings.show_featured_image %}
  {% assign collectionSorting = section.settings.collection_sorting %}
  {% assign collectionFiltering = section.settings.collection_filtering %}
  {% assign productLayout = section.settings.product_grid_layout %}
  {% assign stockLevelOverlay = section.settings.stock_level_overlay %}
  {% assign stockLevelOverlayThreshold = section.settings.stock_level_overlay_range %}
  {% assign productsPerRow = section.settings.products_in_row %}
  {% assign productsPerPage = productsPerRow | times: section.settings.rows %}

  {%
    render 'collection-header',
    collectionImage: collectionImage
  %}

  {% paginate collection.products by productsPerPage %}

    {% assign platforms = 0 %}
    {% if settings.share-widget-facebook %}{% assign platforms = platforms | plus: 1 %}{% endif %}
    {% if settings.share-widget-x %}{% assign platforms = platforms | plus: 1 %}{% endif %}
    {% if settings.share-widget-pinterest %}{% assign platforms = platforms | plus: 1 %}{% endif %}
    {% if settings.share-widget-fancy %}{% assign platforms = platforms | plus: 1 %}{% endif %}
    {% if settings.share-widget-email %}{% assign platforms = platforms | plus: 1 %}{% endif %}

    {% if platforms > 0 %}
      <div class="collection-sharing">
        <span class="collection-sharing-toggle">{{ 'general.share_buttons.share' | t }}</span>

        {% render 'share-buttons' %}
      </div>
    {% endif %}

    {% if collectionSorting or collectionFiltering %}
      <div class="collection-viewing-parameters">
        {% if collection.handle != blank and collectionFiltering and collection.filters.size > 0 %}
          <div class="collection-filtering" data-fallback-url="{{ collection.url }}">
            {%
              render 'faceted-filters',
              filters: collection.filters,
              class_prefix: 'faceted'
            %}
          </div>
        {% endif %}
        {% if collectionSorting %}
          {% for option in collection.sort_options %}
            {% if option.value == collection.default_sort_by %}
              {% assign default_option = option.name %}
            {% endif %}
            {% if option.value == collection.sort_by %}
              {% assign selected_option = option.name %}
            {% endif %}
          {% endfor %}

          {% if selected_option == blank %}
            {% assign selected_option = default_option %}
          {% endif %}

          <div class="collection-sorting {% if collection.current_vendor %}vendor-collection{% endif %}">
            <div class="select-wrapper">
              {% assign current_sort = collection.sort_by | default: collection.default_sort_by %}

              <select>
                {% for option in collection.sort_options %}
                  <option
                    value="{{ option.value }}"
                    {% if current_sort contains option.value %}
                      selected
                    {% endif %}
                  >
                    {{ option.name }}
                  </option>
                {% endfor %}
              </select>

              <label class="selected-text">
                {{ 'collections.collection_sorting.title' | t }}: {{ selected_option }}
                {% render 'icon' with 'chevron-down' %}
              </label>
            </div>
          </div>
        {% endif %}
      </div>
      {% if collectionFiltering %}
        {% for filter in collection.filters %}
          {% if filter.active_values.size > 0 or filter.min_value.value or filter.max_value.value %}
            {% capture clear_all %}
              {% if collection.handle == 'vendors' %}
                {{ collection.url }}&sort_by={{ current_sort }}
              {% else %}
                {{ collection.url }}?sort_by={{ current_sort }}
              {% endif %}
            {% endcapture %}
              {%-
                render 'faceted-filters-active',
                filters: collection.filters,
                class_prefix: 'faceted',
                clear_url: clear_all,
              -%}
            {% break %}
          {% endif %}
        {% endfor %}
      {% endif %}
    {% endif %}

    <div class="collection-products clearfix
      {{productLayout}}-layout
      {{productTextStyle}}-style
      rows-of-{{productsPerRow}}
      {% if collection.products.size == 0 %}collection-empty{% endif %}"
      data-layout="{{productLayout}}">

      {% for product in collection.products %}
        {%
          render 'product-list-item',
          product: product,
          stockLevelOverlay: stockLevelOverlay,
          stockLevelOverlayThreshold: stockLevelOverlayThreshold
        %}
      {% else %}
        <p class="empty">{{ 'collections.collection.empty' | t }} {% if current_tags.size > 0 %}{{ 'collections.collection.empty_tag_filter' | t }}{% endif %}</p>
      {% endfor %}
    </div>

    {% render 'pagination', paginate: paginate %}

  {% endpaginate %}

  <script>
    window.sectionJSON = {{ section.settings | json }};
  </script>

</div>

{% schema %}
{
  "name": "Collection pages",
  "class": "section-collection",
  "settings": [
    {
      "type": "select",
      "id": "product_grid_layout",
      "label": "Layout",
      "options": [
        {
          "value": "masonry",
          "label": "Collage"
        },
        {
          "value": "uniform",
          "label": "Grid"
        }
      ],
      "default": "uniform"
    },
    {
      "type": "select",
      "id": "products_pagination_method",
      "label": "Pagination method",
      "options": [
        {
          "value": "standard-pagination",
          "label": "Standard pagination"
        },
        {
          "value": "jump-to-page-pagination",
          "label": "Jump-to-page pagination"
        }
      ],
      "default": "standard-pagination"
    },
    {
      "type": "range",
      "id": "products_in_row",
      "label": "Products per row",
      "min": 2,
      "max": 4,
      "step": 1,
      "default": 4
    },
    {
      "type": "range",
      "id": "rows",
      "label": "Rows",
      "min": 1,
      "max": 12,
      "step": 1,
      "default": 2
    },
    {
      "type": "checkbox",
      "id": "show_featured_image",
      "label": "Show collection image"
    },
    {
      "type": "header",
      "content": "Filters"
    },
    {
      "type": "checkbox",
      "id": "collection_sorting",
      "label": "Enable sorting",
      "info": "[Learn more](https://support.pixelunion.net/hc/en-us/articles/360026420633)",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "collection_filtering",
      "label": "Enable filtering",
      "default": true
    },
    {
      "type": "header",
      "content": "Stock level indicator"
    },
    {
      "type": "checkbox",
      "id": "stock_level_overlay",
      "label": "Enable indicator"
    },
    {
      "type": "range",
      "id": "stock_level_overlay_range",
      "label": "Show warning when stock is below:",
      "min": 2,
      "max": 10,
      "step": 1,
      "default": 5
    }
  ]
}

{% endschema %}